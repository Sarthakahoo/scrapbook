
fetch remote origin branches ond prepare them so ruby can process it
---------------------------------------------

~~~bash
git ls-remote --heads | awk '{print $2}'
~~~

~~~ruby

~~~


gitignore file that has been allreaddy tracked
----------------------------------------------

so put your file name to *.gitignore*

    somefolder/somefile

than do 
 
    git rm -r --cached somefolder/somefile
    git add .
    git commit -m "removing tracking "


there is also possibility to do 

    git rm -r --cached .
 
 that will remove all files from index, and you can add them again.


reset to previous state (realy hard)
-----------------------------------

f.e. if you merge and you have conflict, you will restart to state before merge

~~~bash
git reset --hard
~~~





How to delete files from repo
------------------------------

you git added and commited file, now you deleted it with *rm*. But if you do *git s* it's still  in repository

~~~bash
    delete:  app/view/some/file
~~~

way to rm that

~~~bash
git co app/view/some/file
git rm app/view/somefile
gin commit 
~~~


creating aliases
-----------------

edit @$HOME/.gitconfig@

~~~bash
[alias]
  cc = commit -m 'Just simple content'
  s = status
  ph = push heroku master??

~~~





