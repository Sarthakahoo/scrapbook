


#ransack 

https://github.com/ernie/ransack

~~~bash
gem 'ransack'
~~~

####controllers

~~~ruby
  def index
    @search = User.search(params[:q])
    @users  = @search.result(:district => true)
    # @users  = @search.result(:district => true).page(params[:page])  # if you use kaminary for pagination
    # @users  = UserDecorator.decorate(@users)     # if you are using decorator
    respond_with @users
  end
~~~


####builtin helper

~~~ruby
  %th=sort_link(@search, :name)
~~~



#kaminari

keywords: pagination caminari caminary kaminary kamynary 

#### helpers


create pagination links 

~~~ruby
= paginate @users
~~~








=====================================================================


     gem 'will_paginate', '~> 3.0'


https://github.com/mislav/will_paginate

## render page links in the view:
~~~ruby
@posts = Post.paginate(:page => params[:page])

# or, use an explicit "per page" limit:
Post.paginate(:page => params[:page], :per_page => 30)

~~~

render page links in the view:

~~~ruby
<%= will_paginate @posts %>
~~~




# will_paginate and metasearch #

~~~ruby
@search = Project.active.search(params[:search])
@projects = @search.paginate(:page => params[:page], :per_page => 6)
~~~

~~~ruby
@posts = Post.all.paginate :page => params[:page], :order => 'created_at DESC
~~~

~~~ruby
<%= will_paginate @posts %>
~~~

