

Handling expired tokens 
========================

https://developers.facebook.com/blog/post/500/
https://developers.facebook.com/docs/offline-access-deprecation/#extend_token

notes from articles 

*  allowing the option to reset the expiration time for existing, valid access_tokens each time a user interacts with your site.
*  When a user visits your site with an existing, valid access_token, you have the option to extend the expiration time of that access token without requiring the user to login again. 
   *  only once per day
   *  this not apply to desktop & modile devices ... [ios solution](https://developers.facebook.com/docs/mobile/ios/build/#extend_token)

* when facebook is generating token it also provides expiration time 
  *  http://developers.facebook.com/docs/authentication/  serch for "the expires parameter)

Posting with Kaola
==================

http://blog.twoalex.com/2010/05/03/introducing-koala-a-new-gem-for-facebooks-new-graph-api/

~~~ruby

require 'rubygems'
require 'koala'
@graph = Koala::Facebook::GraphAPI.new('tokeeeeeeeeeeen')
@graph.put_wall_post("hey, i'm learning kaola", {:name => 'Kaola is cool', :caption =>' ', :link => 'http://bofu.eu' })
@graph.get_connections('100002413336187','feed')

~~~

Posting parameters to wall:  message, picture, link, name, caption, description, source, place, tags
all and others: https://developers.facebook.com/docs/reference/api/  and find publishing



Geting informations from FB token
===============================


https://graph.facebook.com/me?access_token=yourtokenhere

~~~~bash
{
   "id": "100002578784532",
   "name": "Testero Emil",
   "first_name": "Testero",
   "last_name": "Emil",
   "link": "http://www.facebook.com/profile.php?id=100002578784532",
   "birthday": "11/18/1971",
   "favorite_teams": [
      {
         "id": "170785732954184",
         "name": "Rob Machado"
      }
   ],
   "gender": "female",
   "locale": "en_US",
   "updated_time": "2011-07-19T14:18:36+0000"
}

note: above data isn't my real FB user

~~~













posting
===================


##Direct post to own wall


    graph.facebook.com/me/feed

fields:
 
    name: test


note: must be post !




## post to friends wall 


https://graph.facebook.com/ 100002413336187/feed

        link: http://developers.facebook.com/
        name: bubla
        picture: http://osaust.jpg
        caption: fererence documentation oea oeau oeau oaeu oaeu oeu oeu oeu oeu oeu oeu oeu oe uoe uoeu oeu oeu oe uoeu oe oe uo a
        description: fererence documentation oea oeau oeau oaeu oaeu oeu oeu oeu oeu oeu oeu oeu oe uoe uoeu oeu oeu oe uoeu oe oe uo a
        message: oh checkt this oute



POST
----

If you wan't to post something on FB wall you have to send some params to fb

~~~ruby
name: "this will be the title of wall post" 
link: "http/wher to go after click"
~~~

[graph api, list parameters that I can send/post](https://developers.facebook.com/docs/reference/api/post/)


keywords: posting, post





Facebook like button
=======================


you can generate tike button here (basic functionality):

http://developers.facebook.com/docs/reference/plugins/like/

to change image displayed in the FB post after clicking the FB like button, you have to add **Open Graph Tags** to your site, example:

~~~html
<meta property="og:title" content="Eq scrapbook" />
<meta property="og:type" content="website" />
<meta property="og:url" content="http://eq8scrapbook.heroku.com" />
<meta property="og:image" content="http://eq8scrapbook.heroku.com/rails_is_ponies_and_rainbows__equivalent.png" i/>
<meta property="og:site_name" content="Lovethis " />
<meta property="fb:admins" content="123faceb00idoftheadminofapp567" />
~~~

!!! don't copy and paste like dummy, you can generate this code [here](http://developers.facebook.com/docs/reference/plugins/like/)


description is taken from meta description, to change title and website you need open graph tags


**warning!!** there are some realy interesting restrictions for open tag (f.e. aafter 50 you cannot chnage title) i recomend to read them [here](http://developers.facebook.com/docs/opengraph/)


**site debbuger** http://developers.facebook.com/tools/debug
