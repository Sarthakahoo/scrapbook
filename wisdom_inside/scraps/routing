#paths in console

~~~ruby
 app.root_path
 # '/'
~~~

or 

~~~ruby
 r = Rails.application.routes

 r.recognize_path "/station/index/42.html"
 #=> {:controller=>"station", :action=>"index", :format=>"html", :id=>"42"}

 r.generate :controller => :station, :action=> :index, :id=>42
 #=> /station/index/42

~~~

http://stackoverflow.com/questions/2778074/recognize-routes-in-rails-console-session



rails
==========

http://api.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html#method-i-url_for


~~~ruby
      resources :recommendation_collections, :only =>[:index, :show], :controller => "recommendation_collections/base" do

      end
~~~




forcing ssl under rails 
-------------------------

how to change http links to https

[Configuring Rails 3 to use HTTPS and SSL](http://www.simonecarletti.com/blog/2011/05/configuring-rails-3-https-ssl/)


in view for http headers use // insted of http://

~~~html
 <script src="//ajax.googleapis.com/ajax/libs/chrome-frame/1/CFInstall.min.js"></script>


<link rel="stylesheet" href="//example.com/style.css">

<script src="//example.com/script.js"></script>
~~~

[source](http://blog.httpwatch.com/2010/02/10/using-protocol-relative-urls-to-switch-between-http-and-https/)


don't do it this way, even if it is possible 
<c>
"http#{'s' if request.ssl?}"


's' if request.ssl?
</c>













back
----

~~~ruby
url_for(:back)
~~~


full path (with http)
----------------------

~~~ruby
<%= url_for(:action => 'login', :controller => 'members', :only_path => false, :protocol => 'https') %>
# => https://www.railsapplication.com/members/login/
~~~


example 1 
--------
http://localhost:3000/games?hidden=1    #bez akehokolvek nastavenia

#in controller
if params[:hidden]
  @articles.where(:something => (params[:hidden]) == 1)
end


example 2
----------

~~~ruby

person_asset_path(1,2)
#/people/1/assets/2

person_asset_path(:person_id =>1, :id =>2)
#/people/1/assets/2
~~~






formated route
-------------

in rails 2

~~~ruby
formatted_page_path(42, :xml)
~~~
