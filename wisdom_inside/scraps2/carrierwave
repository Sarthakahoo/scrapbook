https://gist.github.com/yortz/718055 carrierwave wattermarks and lot of more options
https://github.com/rheaton/carrierwave-video




# wattermarks

Process files as they are uploaded:

    process :resize_to_fill => [850, 315]
    process :convert => 'png'
    process :watermark

    def watermark
      manipulate! do |img|
        logo = Magick::Image.read("#{Rails.root}/app/assets/images/watermark.png").first
        img = img.composite(logo, Magick::NorthWestGravity, 15, 0, Magick::OverCompositeOp)
      end
    end


# how to have different storage in test enviroment for carrierwave

using initializer

    # config/initializers/carrierwave.rb
    if Rails.env.test? or Rails.env.cucumber?
      CarrierWave.configure do |config|
        config.storage = :file
        config.enable_processing = false
      end
    else
      CarrierWave.configure do |config|
        config.storage = :fog
      end
    end

but better solution is with module



# factory girl of model using carrierwave

    FactoryGirl.define do
      factory :archive_file do
        association :archive
        title "MyString"
        description "MyText"

        trait :with_file do
          after(:build) do |af|
            af[:file] = 'dummy.txt'
          end
        end
      end
    end

    FactoryGirl.build :archive_file, with_file

or better 

    # Read about factories at https://github.com/thoughtbot/factory_girl
    include ActionDispatch::TestProcess
    FactoryGirl.define do
      factory :photo do
        association :event
        association :entry
        photo { fixture_file_upload(Rails.root.join(*%w[spec fixtures files example.jpg]), 'image/jpg') }
        description "MyString"
      end
    end


